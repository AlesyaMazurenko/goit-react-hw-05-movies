{"version":3,"file":"static/js/484.8dc15e8b.chunk.js","mappings":"wQAMe,SAASA,IAAS,IAAD,EAC5B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAOhDC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,2FACfP,EAAUI,GADK,mBAGQI,EAAAA,EAAAA,IAAoBJ,GAH5B,OAGLK,EAHK,OAIXb,EAAUa,EAAKC,SAJJ,gDAMXZ,EAAS,EAAD,IANG,yDAAH,qDASZM,GACAG,GAEP,GAAE,CAACH,IAEJ,IAAMO,EAAY,mCAAG,WAAOC,GAAP,8EACjBA,EAAEC,iBArBsBC,EAsBNF,EAAEG,OAAOC,SAASjB,OAAOkB,MApB/Cd,EAD4B,KAATW,EAAc,CAAEA,KAAAA,GAAS,CAAC,GAmBxB,mBAKMN,EAAAA,EAAAA,IAAoBT,GAL1B,OAKPU,EALO,OAMbb,EAAUa,EAAKC,SANF,gDAQbZ,EAAS,EAAD,IARK,kCApBM,IAACgB,CAoBP,uBAAH,sDAiBlB,OACI,kBAAMI,UAAU,UAAhB,WACI,0BACI,kBAAMC,SAAUR,EAAhB,WACI,kBAAOS,SARF,SAACR,GAClBZ,EAAUY,EAAEG,OAAOE,MACtB,EAM8CI,KAAK,OAAOP,KAAK,SAASG,MAAOlB,KAChE,mBAAQmB,UAAU,aAAaG,KAAK,SAApC,0BAGR,gBAAIH,UAAU,cAAd,UACKvB,IAAU,SAAC2B,EAAA,EAAD,CAAYb,KAAMd,IACV,IAAlBA,EAAO4B,SAAgB,kDACvB1B,IAAS,oDAKzB,C","sources":["pages/Movie/Movie.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getSearchingOfMovie } from 'api/Api';\nimport MoviesItem from \"components/MoviesItem/MoviesItem\";\nimport { useSearchParams } from \"react-router-dom\";\nimport './Movie.css';\n\nexport default function Movie() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [search, setSearch] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const productName = searchParams.get(\"name\") ?? \"\";\n\n     const updateQueryString = (name) => {\n    const nextParams = name !== \"\" ? { name } : {};\n    setSearchParams(nextParams);\n    };\n  \n    useEffect(() => {\n        const fetchMovie = async () => {\n            setSearch(productName)\n            try {\n                const data = await getSearchingOfMovie(productName);\n                setMovies(data.results)\n            } catch (error) {\n                setError(error);\n            }\n        }\n        if (productName) {\n            fetchMovie();\n        }\n    }, [productName]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        updateQueryString(e.target.elements.search.value)\n        \n        try {\n            const data = await getSearchingOfMovie(search);\n            setMovies(data.results)\n        } catch(error) {\n            setError(error)\n            \n        }\n    }\n\n    const handleChange = (e) => {\n        setSearch(e.target.value)\n    }\n\n    return (\n        <main className=\"wrapper\">\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <input onChange={handleChange} type=\"text\" name=\"search\" value={search} />\n                    <button className=\"search-btn\" type=\"button\">Search</button>\n                </form>   \n            </div>\n            <ul className=\"movies-list\">\n                {movies && <MoviesItem data={movies} />}\n                {movies.length === 0 && <p>Sorry, movie not found</p>}\n                {error && <p>Unexpected error...</p>}\n            </ul>\n            \n        </main>\n    )\n}"],"names":["Movie","useState","movies","setMovies","error","setError","search","setSearch","useSearchParams","searchParams","setSearchParams","productName","get","useEffect","fetchMovie","getSearchingOfMovie","data","results","handleSubmit","e","preventDefault","name","target","elements","value","className","onSubmit","onChange","type","MoviesItem","length"],"sourceRoot":""}
{"version":3,"file":"static/js/198.d89789c7.chunk.js","mappings":"wQAIe,SAASA,EAAT,GACX,OADyC,EAARC,KACrBC,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvB,OAAO,gBAAIC,UAAU,eAAd,WACH,iBAAMA,UAAU,UAChB,eAAGA,UAAU,SAAb,qBAA+BF,MAC/B,uBAAIC,OAHiCE,EAAAA,EAAAA,MAM5C,GACJ,CCRc,SAASC,IACpB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACIC,GAAe,EAkBnB,OAjBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,WAAOP,GAAP,iGAEOQ,EAAAA,EAAAA,IAAkBR,GAFzB,OAENP,EAFM,OAGZW,EAAgBX,GAHJ,gDAKZgB,QAAQC,IAAR,MALY,yDAAH,sDAQjBH,EAAYP,EACf,GAAE,CAACA,IAE+B,IAA/BG,EAAaQ,gBACjBN,GAAe,GAGfI,QAAQC,IAAIP,IAER,gBAAIN,UAAU,eAAd,UACKM,EAAaS,UAAW,SAAC,EAAD,CAAYnB,KAAMU,EAAaS,UACvDP,IAAgB,+CAG5B,C","sources":["pages/MovieDetails/Review/ReviewItem.jsx","pages/MovieDetails/Review/Review.jsx"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport React from \"react\";\nimport './ReviewItem.css';\n\nexport default function ReviewItem({ data }) {\n    return data.map(({ author, content }) => {\n        return <li className='reviews-item' key={nanoid()}>\n            <span className=\"line\"></span>\n            <p className=\"author\">Author: {author}</p>\n            <p>{content}</p>\n            {/* <span className=\"line\"></span> */}\n        </li>\n    })\n}","import React, { useEffect, useState } from \"react\";\nimport { getReviewsOfMovie } from 'api/Api';\nimport { useParams } from 'react-router';\nimport RewievItem from './ReviewItem';\n\nexport default function Reviews() {\n    const { id } = useParams();\n    const [movieReviews, setMoviewReview] = useState([]);\n    let errorMessage = false;\n    useEffect(() => {\n        const fetchReview = async (id) => {\n            try {\n                const data = await getReviewsOfMovie(id);\n                setMoviewReview(data);\n            } catch(error) {\n                console.log(error);\n            }\n        }\n        fetchReview(id);\n    }, [id])\n\n    if (movieReviews.total_results === 0) {\n    errorMessage = true;\n  }\n\n    console.log(movieReviews);\n    return (\n        <ul className=\"reviews-list\">\n            {movieReviews.results && <RewievItem data={movieReviews.results} />}\n            {errorMessage && <p>Reviews not found</p> }\n        </ul>\n    )\n}"],"names":["ReviewItem","data","map","author","content","className","nanoid","Reviews","id","useParams","useState","movieReviews","setMoviewReview","errorMessage","useEffect","fetchReview","getReviewsOfMovie","console","log","total_results","results"],"sourceRoot":""}